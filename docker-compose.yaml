services:
  books-search-engine:
    build:
      context: .
      dockerfile: Dockerfile.local
    volumes:
      - ./src:/app/src
    ports:
      - "3001:3001"
    env_file: .env
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_POOL_MIN: ${DATABASE_POOL_MIN}
      DATABASE_POOL_MAX: ${DATABASE_POOL_MAX}

  pgadmin:
    container_name: pgadmin
    env_file: .env
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: true
    ports:
      - "5050:80"
    networks:
      - books-engine
    depends_on:
      - booksdb

  booksdb:
    container_name: booksdb
    platform: linux/arm64
    restart: unless-stopped
    image: postgres:16.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init-local/postgres:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - books-engine

<<<<<<< Updated upstream
=======
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    depends_on:
      - redis

>>>>>>> Stashed changes
volumes:
  books-engine-data:

networks:
  books-engine:
    name: books-engine
    driver: bridge
